version: '3'

tasks:
  backend:console:
    cmds:
      - bundle install
      - bundle exec rails db:create
      - bundle exec rails db:migrate
      - bundle exec rails console
    interactive: true

  backend:start:
    cmds:
      ##
      # NOTE: Open `http://localhost:3000`
      #
      - bundle install
      - bundle exec rails db:create
      - bundle exec rails db:migrate
      - task: static_sites:build
      - bundle exec rails server
    interactive: true

  deps:install:
    cmds:
      - bundle install
      - cd static_sites/code-notes && yarn install

  install:
    cmds:
      - task: deps:install

  ##
  #
  #
  local_production:backend:start:
    cmds:
      - RAILS_ENV=production bundle exec rails db:migrate
      - RAILS_ENV=production bundle exec rake assets:precompile
      - bundle exec rails server -e production

  ##
  #
  #
  local_production:backend:logs:
    cmds:
      - mkdir -p log && touch log/production.log && tail -f log/production.log

  ##
  # - https://fly.io/docs/rails/the-basics/deployments/#running-migrations
  #
  production:backend:db:migrate:
    cmds:
      - fly ssh console -C "app/bin/rails db:migrate"

  ##
  # - https://fly.io/docs/rails/getting-started
  #
  production:backend:deploy:
    cmds:
      - fly deploy

  ##
  # - https://fly.io/docs/rails/the-basics/run-tasks-and-consoles/#rails-console
  #
  # NOTE: Make sure you have executed `fly launch` if you have a new application.
  #
  production:backend:console:
    cmds:
      - fly ssh console -C "bin/rails console"

  ##
  # FIX: Does NOT work since `fly ssh console -C` does NOT wait `tail -f` to complete, it exits immediately.
  # Use `task production:env:console` or `task production:app:output` instead.
  #
  # - https://fly.io/docs/rails/the-basics/run-tasks-and-consoles/#rails-console
  #
  # NOTE: `/rails` is created by fly.
  #
  production:backend:logs:
    cmds:
      - fly ssh console -C "touch log/production.log && tail -f log/production.log"

  ##
  # - https://fly.io/docs/rails/the-basics/deployments/#run-ad-hoc-tasks-after-deploying
  #
  production:bash:
    cmds:
      - fly ssh console

  ##
  # - https://fly.io/docs/rails/the-basics/run-tasks-and-consoles/#rails-console
  #
  production:logs:
    cmds:
      - fly logs

  static_sites:build:
    cmds:
      - task: static_sites:clean
      - task: static_sites:code_notes:build
      - cp -r static_sites/code-notes/public app/views/static_sites/code_notes
      - task: static_sites:docusaurus:build
      - cp -r static_sites/docusaurus/build app/views/static_sites/docusaurus

  static_sites:clean:
    cmds:
      - rm -rf app/views/static_sites
      - mkdir -p app/views/static_sites

  static_sites:code_notes:build:
    cmds:
      - cd static_sites/code-notes && yarn install && yarn build

  static_sites:code_notes:start:
    cmds:
      ##
      # NOTE: Open `http://localhost:8000`.
      #
      - cd static_sites/code-notes && yarn install && yarn dev

  static_sites:docusaurus:build:
    cmds:
      - cd static_sites/docusaurus && npx docusaurus build

  static_sites:docusaurus:start:
    cmds:
      ##
      # NOTE: Open `http://localhost:8000`.
      #
      - cd static_sites/docusaurus && npx docusaurus start

  test:
    cmds:
      - bundle exec rspec
